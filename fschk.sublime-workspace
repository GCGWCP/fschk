{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tmp",
				"tmp_file"
			],
			[
				"app",
				"app_env"
			],
			[
				"dec",
				"declarative_base\timport"
			],
			[
				"sql",
				"sqlalchemy"
			],
			[
				"test",
				"test_traverse_file_list\tstatement"
			],
			[
				"test_dir",
				"test_dirs_first_branch\tstatement"
			],
			[
				"test_file",
				"test_file_list"
			],
			[
				"test_f",
				"test_file_list\tstatement"
			],
			[
				"asser",
				"assertEqual\tstatement"
			],
			[
				"file",
				"file_list\tstatement"
			],
			[
				"test_di",
				"test_dirs_first_branch\tstatement"
			],
			[
				"ass",
				"assertEqual\tfunction"
			],
			[
				"clas",
				"classmethod\tdecorator"
			],
			[
				"com",
				"combinations_with_replacement\tclass"
			],
			[
				"re",
				"result"
			],
			[
				"det",
				"detector\tstatement"
			],
			[
				"ha",
				"hash_bytestr_iter\tfunction"
			],
			[
				"root",
				"root_path\tstatement"
			],
			[
				"creae",
				"create_db\tfunction"
			],
			[
				"ex",
				"ext_attr\tstatement"
			],
			[
				"as",
				"ashexstr\tparam"
			],
			[
				"get",
				"get_file_info\tfunction"
			],
			[
				"page",
				"page_format\tstatement"
			],
			[
				"lin",
				"link_list\tstatement"
			],
			[
				"link",
				"link_text\tstatement"
			],
			[
				"format",
				"format_disambiguation\tfunction"
			],
			[
				"forma",
				"format_disambiguation\tfunction"
			],
			[
				"cle",
				"clean_disambiguation\tfunction"
			],
			[
				"is_",
				"is_nothing\tfunction"
			],
			[
				"find",
				"find_all"
			],
			[
				"code",
				"code_blocks\tstatement"
			],
			[
				"clean",
				"clean_article_paragraphs\tfunction"
			],
			[
				"con",
				"content"
			],
			[
				"query",
				"query_string\tstatement"
			],
			[
				"raw",
				"raw_page\tstatement"
			],
			[
				"max",
				"max_cols\tstatement"
			],
			[
				"line",
				"line_list\tstatement"
			],
			[
				"lien",
				"line_wrap\tfunction"
			],
			[
				"para",
				"paragraphs\tstatement"
			],
			[
				"parag",
				"paragraph"
			],
			[
				"clea",
				"clean_paragraphs\tfunction"
			],
			[
				"pa",
				"paragraphs\tstatement"
			],
			[
				"text",
				"text_list"
			],
			[
				"ter",
				"term_width\tstatement"
			],
			[
				"st",
				"stdscr\tstatement"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#!/usr/bin/env python\n\nfrom sqlalchemy import create_engine, MetaData\nfrom sqlalchemy.orm import relationship, backref\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom db.db_models import File\nfrom config import Config\nBase = declarative_base()\n\napp = Config\napp.set_env(app, 'dev')\n\n\ndef connect(user, password, db, host='localhost', port=5432):\n    url = 'postgresql://' + user + ':' + password + '@' + host + ':' + port + '/' + db\n    con = create_engine(url, client_encoding='utf8')\n    meta = MetaData(bind=con, reflect=True)\n    return con, meta\n\n\ndef select(table, column=[], value=[]):\n    con, meta = connect(\n        app.conf['POSTGRES_USER'],\n        app.conf['POSTGRES_PWORD'],\n        app.conf['POSTGRES_DB'],\n        app.conf['POSTGRES_HOST'],\n        app.conf['POSTGRES_PORT']\n    )\n    if not column:\n        s = meta.tables[table]\n        result = s.execute()\n    elif column and not value:\n        s = meta.tables[table]\n        result = s.execute()\n    elif column and value:\n        s = meta.tables[table]\n        result = s.execute()\n\n    con.close()\n    return result\n\n\ndef insert_row(table, columns={}):\n    con, meta = connect(\n        app.conf['POSTGRES_USER'],\n        app.conf['POSTGRES_PWORD'],\n        app.conf['POSTGRES_DB']\n    )\n    cols = [columns]\n    con.execute(meta.tables[table].insert(), cols)\n    con.close()\n\n\ndef insert_rows(table, columns={}):\n    con, meta = connect(\n        app.conf['POSTGRES_USER'],\n        app.conf['POSTGRES_PWORD'],\n        app.conf['POSTGRES_DB']\n    )\n    cols = [columns]\n    for col in cols:\n        con.execute(meta.tables[table].insert(), col)\n    con.close()\n\n\ndef update_row(table, columns={}):\n    con, meta = connect(\n        app.conf['POSTGRES_USER'],\n        app.conf['POSTGRES_PWORD'],\n        app.conf['POSTGRES_DB']\n    )\n    # select -> insert\n    con.close()\n\n\ndef instantiate_db():\n    try:\n        select('files')\n        return False\n    except KeyError:\n        return True\n\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()\n",
			"file": "db/dbs.py",
			"file_size": 2024,
			"file_write_time": 131314474680000000,
			"settings":
			{
				"buffer_size": 2037,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n\n\nclass DirTree():\n    def __init__(self):\n        self.root = ''\n        self.depth = ''\n        self.graph = {}\n        self.total_dirs = ''\n        self.total_files = ''\n\n        return self\n\n\nclass DirBranch():\n    def __init__(self):\n        self.root = ''\n        self.depth = ''\n        self.graph = {}\n        self.total_dirs = ''\n\n        return self\n\n\nif __name__ == '__main__':\n    pass\n",
			"file": "models/Directories.py",
			"file_size": 390,
			"file_write_time": 131312905200000000,
			"settings":
			{
				"buffer_size": 420,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1057,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "fschk.py",
			"settings":
			{
				"buffer_size": 1201,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "utils/fsnav.py",
			"settings":
			{
				"buffer_size": 2910,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "db/db_models.py",
			"settings":
			{
				"buffer_size": 1654,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "config.py",
			"settings":
			{
				"buffer_size": 1270,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "models/File.py",
			"settings":
			{
				"buffer_size": 611,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 167.0,
		"last_filter": "rem",
		"selected_items":
		[
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/schroder/work/fschk/app",
		"/Users/schroder/work/fschk/constants",
		"/Users/schroder/work/fschk/db",
		"/Users/schroder/work/fschk/models",
		"/Users/schroder/work/fschk/tests",
		"/Users/schroder/work/fschk/utils"
	],
	"file_history":
	[
		"/Users/schroder/work/fschk/utils/fsnav.py",
		"/Users/schroder/work/fschk/app/config.py",
		"/Users/schroder/work/fschk/utils/diff_utils.py",
		"/Users/schroder/work/fschk/tests/hash_utils_tests.py",
		"/Users/schroder/work/fschk/test_fschk.py",
		"/Users/schroder/work/fschk/constants/mimetypes.json",
		"/Users/schroder/work/fschk/constants/file_extensions.json",
		"/Users/schroder/work/fschk/db/dbs.py",
		"/Users/schroder/work/fschk/fschk.py",
		"/Users/schroder/work/fschk/models/File.py",
		"/Users/schroder/work/fschk/constants/__init__.py",
		"/Users/schroder/work/fschk/utils/hash_utils.py",
		"/Users/schroder/work/fschk/tests/fsnav_test.py",
		"/Users/schroder/work/fschk/__init__.py",
		"/Users/schroder/work/fschk/app/__init__.py",
		"/Users/schroder/work/fschk/tests/__init__.py",
		"/Users/schroder/work/fschk/models/Directories.py",
		"/Users/schroder/work/fschk/models/Opsys.py",
		"/Users/schroder/work/fschk/db/models.py",
		"/Users/schroder/work/fschk/config",
		"/Users/schroder/work/fschk/docker-entrypoint.sh",
		"/Users/schroder/work/fschk/Dockerfile",
		"/Users/schroder/work/fschk/.gitignore",
		"/Users/schroder/work/fschk/db/db_connect.py",
		"/Users/schroder/work/fschk/db/__init__.py",
		"/Users/schroder/work/clikipedia/wiki.py",
		"/Users/schroder/work/clikipedia/sources/wikipedia.py",
		"/Users/schroder/work/clikipedia/utils/scrape.py",
		"/Users/schroder/work/clikipedia/sources/scrape.py",
		"/Users/schroder/.git-completion.bash",
		"/Users/schroder/work/fschk/models/__init__.py",
		"/Users/schroder/work/fschk/utils/__init__.py",
		"/Users/schroder/Downloads/Bitwig Studio v1.3.14 (All OS) [dada]/Bitwig Studio v1.3.14/macOS/CRACK/bitwig.jar",
		"/Users/schroder/work/clikipedia/utils/parsers.py",
		"/opt/local/etc/tor/torrc.sample",
		"/Users/schroder/work/clikipedia/sources/wiktionary.py",
		"/Users/schroder/work/clikipedia/utils/__init__.py",
		"/Users/schroder/work/clikipedia/sources/__init__.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			" = ''",
			"'%s'",
			"''",
			"}",
			"\\s+',",
			"}",
			"\\s',",
			"(^\\w+.*$)",
			"(\\w+/\\w+.*$)",
			"(^.\\w+)(\\s+)",
			"'ext': \\w",
			"description':\\n",
			"description': ",
			"}",
			"('ext': )(.+)\\n('description': )(.)(.+)\\n('used_by': )(.*)",
			"(^'used_by':)(.*)(\\n)",
			"(^'used_by.*')(\\n)",
			"(^'ext')",
			"(^)(VM\\d{4}:\\d )",
			"(\\n)VM\\d+:\\d",
			"(^'used_by.*')(\\n)",
			"(\\n'ext')",
			"\\n'ext'",
			"('ext': )(.+)\\n('description': )( )(.+)\\n('used_by': )(.*)",
			"(^)(VM\\d{4}:\\d )(.+\\n)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)",
			"2VM\\d{4}",
			"2VM",
			"WAI",
			"('ext': )(.+)\\n('description': )( )(.+)\\n('used_by': )(.*)",
			"(^)(VM\\d{4}:\\d )(.+\\n)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)",
			"(\\n)(^'ext)",
			"2VM\\d+:1 ",
			"('ext': )(.+)\\n('description': )( )(.+)\\n('used_by': )(.*)",
			"('ext': )(.+)\\n('description': )( )(.+)\\n('used_by': )(.+)",
			"('ext': )(.+)",
			"'ext': (.+)",
			"(^)(VM\\d{4}:\\d )",
			"(^)(VM\\d{4}:\\d )(.+\\n)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)",
			"(^)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)",
			"(^VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)",
			"(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)(.+\\n)(VM\\d{4}:\\d)",
			"os_info",
			"h2",
			"h1",
			"h1s"
		],
		"highlight": true,
		"in_selection": true,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			", ",
			"'%s', ",
			"Column()",
			"},",
			"',",
			"},",
			",",
			"'doctype': '\\1',",
			"\\n'mimetype':'\\1'}",
			"{'ext': '\\1',\\n",
			"},",
			"\\1'\\2',\\n\\3'\\5',\\n\\6'\\7'}",
			"\\1'\\2',\\3'\\5',\\6'\\7'}",
			"\\1'\\2',\\3},",
			"{\\1",
			"",
			",",
			"\\1\\2}",
			"{\\1",
			"{",
			"\\1'\\2',\\n\\3'\\5',\\n\\6'\\7'\\n",
			"\\1'ext': \\3'description': \\5'used_by':",
			"VM1226",
			"VM",
			"\\1'\\2',\\n\\3'\\5',\\n\\6'\\7'\\n",
			"\\1'ext': \\3'description': \\5'used_by':",
			"{\\1\\2",
			"",
			"\\1'\\2',\\n\\3'\\5',\\n\\6'\\7'\\n",
			"\\1'\\2',\\3'\\5', ''",
			"\\1'\\2'",
			"'\\1',",
			"",
			"\\1'ext': \\3'description': \\5'used_by':",
			"\\1'ext': '\\3'description': \\5'used_by':",
			"\\$\\1'ext': '\\3'description': \\5'used_by':",
			"\\$\\1'ext': \"\\u\\2\",\\n\\3'description': \\5'used_by':",
			"\\1'ext': \"$2\",\\n\\3'description': \\5'used_by':",
			"\\1'ext': \"$ 2\",\\n\\3'description': \\5'used_by':",
			"\\0^'ext':\\2'description':\\4'used_by",
			"\\1'ext':\\3'description':\\3'used_by':",
			"\\1'ext': $2'$2',\\3'description': '\\4',\\5'used_by':",
			"\\1'ext': '$2', \\3'description': '\\4',\\5'used_by':",
			"\\1'ext': '\\2',\\3'description': '\\4',\\5'used_by':",
			"\\1'ext':\\3'description':\\3'used_by':",
			"\\0^'ext':\\2'description':\\4'used_by",
			"\\0'ext':\\2'description':\\4'used_by':",
			"\\1'ext'\\3'description'\\5'used_by'",
			"${0} test",
			"${1} test",
			"$1(test)",
			"info",
			"h4",
			"h3",
			"h2",
			"h2s"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "db/dbs.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2037,
						"regions":
						{
						},
						"selection":
						[
							[
								294,
								294
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "models/Directories.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 420,
						"regions":
						{
						},
						"selection":
						[
							[
								193,
								193
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1057,
						"regions":
						{
						},
						"selection":
						[
							[
								1046,
								1046
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 601.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "fschk.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1201,
						"regions":
						{
						},
						"selection":
						[
							[
								575,
								575
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 91.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "utils/fsnav.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2910,
						"regions":
						{
						},
						"selection":
						[
							[
								1410,
								1410
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 245.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "db/db_models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1654,
						"regions":
						{
						},
						"selection":
						[
							[
								1654,
								1654
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "config.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1270,
						"regions":
						{
						},
						"selection":
						[
							[
								550,
								550
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "models/File.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 611,
						"regions":
						{
						},
						"selection":
						[
							[
								551,
								70
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fschk.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
